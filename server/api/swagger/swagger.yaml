swagger: "2.0"
info:
  version: "0.0.1"
  title: WorkOfArt RestAPI
# during dev, should point to your local machine
host: localhost:8081
# basePath prefixes all resource paths
basePath: /
#
schemes:
  - http
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /worksOfArt:
    x-swagger-router-controller: worksOfArt
    post:
      description: Add a new WorkOfArt
      operationId: create
      parameters:
        - name: newWorkOfArt
          description: Attributes of new WorkOfArt
          in: body
          required: true
          schema:
            $ref: "#/definitions/WorkOfArt"
      responses:
        "201":
          description: Successfully created
          schema:
            $ref: "#/definitions/WorkOfArt"
        default:
          $ref: "#/responses/ErrorResponse"
    get:
      description: Get all available worksOfArt
      operationId: readAll
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/WorkOfArt"
        default:
          $ref: "#/responses/ErrorResponse"
  /worksOfArt/{id}:
    x-swagger-router-controller: worksOfArt
    get:
      description: Get a WorkOfArt by its ID
      operationId: readById
      parameters:
        - name: id
          description: WorkOfArt id
          type: number
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/WorkOfArt"
        default:
          $ref: "#/responses/ErrorResponse"
    delete:
      description: Delete a WorkOfArt by its ID
      operationId: deleteById
      parameters:
        - name: id
          description: WorkOfArt id
          type: number
          in: path
          required: true
      responses:
        "200":
          $ref: "#/responses/Response"
        default:
          $ref: "#/responses/ErrorResponse"
    put:
      description: Update an existing WorkOfArt by its ID or create a new one with the provided ID
      operationId: updateOrCreate
      parameters:
        - name: id
          description: WorkOfArt id
          type: number
          in: path
          required: true
        - name: WorkOfArt
          description: New properties of existing WorkOfArt or properties of new WorkOfArt
          in: body
          required: true
          schema:
            $ref: "#/definitions/WorkOfArt"
      responses:
        "200":
          description: Successfully updated
          schema:
            $ref: "#/definitions/WorkOfArt"
        "201":
          description: Successfully created
          schema:
            $ref: "#/definitions/WorkOfArt"
        default:
          $ref: "#/responses/ErrorResponse"
    patch:
      description: Update some attributes of a WorkOfArt identified by its ID
      operationId: updateById
      parameters:
        - name: id
          description: WorkOfArt id
          type: number
          in: path
          required: true
        - name: WorkOfArt
          description: Only those attributes of existing WorkOfArt, that should change.
          in: body
          required: true
          schema:
            $ref: "#/definitions/WorkOfArtOptional"
      responses:
        "200":
          description: Successfully updated
          schema:
            $ref: "#/definitions/WorkOfArt"
        default:
          $ref: "#/responses/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  # Model definition for a WorkOfArt
  WorkOfArt:
    properties:
      # The Sequelize-ORM will add id, createdAt and updatedAt
      title:
        type: string
        description: Title of the WorkOfArt
      author:
        type: string
        description: Author of the WorkOfArt
      description:
        type: string
        description: Description of the WorkOfArt
      image:
        type: string
        description: Image of the WorkOfArt
    required:
      - title
      - author
      - description
      - image
  # Model definition for a WorkOfArt with optional attributes (e.g. to patch some attributes)
  WorkOfArtOptional:
    properties:
      title:
        type: string
        description: Title of the WorkOfArt
      author:
        type: string
        description: Author of the WorkOfArt
      description:
        type: string
        description: Description of the WorkOfArt
      image:
        type: string
        description: Image of the WorkOfArt
# response definitions:
responses:
  Response:
    description: Success
    schema:
      type: object
      properties:
        success:
          type: number
        description:
          type: string
      required:
        - success
        - description
  ErrorResponse:
    description: Error
    schema:
      required:
        - message
      properties:
        message:
          type: string
